{
  "type": "group",
  "name": "eventStream3",
  "enabled": true,
  "items": [
    {
      "type": "function",
      "name": "__meta",
      "enabled": true,
      "code": "{\n\t\"description\": \"Nexus event handler\",\n    \"version\": \"1.3.9\",\n    \"website\": \"https://github.com/Log-Wall/eventstream3\",\n    \"dependencies\": []\n}"
    },
    {
      "type": "function",
      "name": "onInstall",
      "enabled": true,
      "code": "nexusclient.reflexes().run_function('onLoad', {}, 'eventStream3');"
    },
    {
      "type": "function",
      "name": "onLoad",
      "enabled": true,
      "code": "nexusclient.api_funcs = () => ['send_command', 'display_notice', 'display_html_line', 'get_variable', 'set_variable', 'delete_variable', 'inc_variable', 'dec_variable', 'mul_variable', 'div_variable', 'send_GMCP', 'run_function', 'to_number', 'reflex_find_by_name', 'reflex_enable', 'reflex_disable', 'current_text', 'gag_current_line', 'colorize_current_line', 'replace_current_line', 'notification_show', 'buttons_set_label', 'buttons_set_commands', 'buttons_set_highlight', 'buttons_set_default', 'gmcp', 'open_channel', 'close_channel', 'current_layout', 'set_current_layout', 'send_direct', 'print', 'nexus', 'client', 'GMCP', 'nexusclient', 'nexMap', 'nexGui', 'nexSys', 'nexAction', 'nexBash', 'nexTransmute', 'nexDrop', 'eventStream', 'globalThis'];\n\nnexusclient.reflexes().disable_reflex(nexusclient.reflexes().find_by_name(\"trigger\", \"Master Trigger\", false, false, \"eventStream3\"));\nnexusclient.reflexes().disable_reflex(nexusclient.reflexes().find_by_name(\"trigger\", \"Master Skill Trigger\", false, false, \"eventStream3\"));\n\nglobalThis.GMCP ??= nexusclient.datahandler().GMCP;\n\nimport(\"https://unpkg.com/nexevent/bundle.min.js\").then(() => {\n  import(\"https://unpkg.com/nexaction/nexaction.min.js\").then(() => {\n    nexusclient\n      .reflexes()\n      .enable_reflex(\n        nexusclient\n          .reflexes()\n          .find_by_name(\n            \"trigger\",\n            \"Master Trigger\",\n            false,\n            false,\n            \"eventStream3\"\n          )\n      );\n    nexusclient.reflexes().run_function(\"esLoad\", {}, \"ALL\");\n  });\n});\n\n// Packages that rely on initializing with loading events to eventStream should be placed in\n// a separate function \"esLoad\". This ensures that eventStream is loaded first."
    },
    {
      "type": "function",
      "name": "onGMCP",
      "enabled": true,
      "code": "if (typeof eventStream === 'undefined') { return; }\ntry {\n  globalThis.eventStream.gmcpBackLog.push(args);\n  globalThis.eventStream.gmcpHandler();\n  //window.eventStream.raiseEvent(args.gmcp_method, args.gmcp_args);\n} catch(err) {\n  console.log(err);\n  throw err;\n}"
    },
    {
      "type": "function",
      "name": "onBlock",
      "enabled": true,
      "code": "if (typeof eventStream !== 'undefined') {\n\tglobalThis.eventStream.raiseEvent('PromptEvent');\n}"
    },
    {
      "type": "function",
      "name": "esLoad",
      "enabled": true,
      "code": "if (!GMCP.Char?.Status?.class) {\n  globalThis.eventStream.gmcpBackLog.push(\n    {\n      gmcp_method: \"Char.Status\",\n      gmcp_args: {\n        class: \"Magi\"\n      }\n    }\n  );\n  globalThis.eventStream.gmcpHandler();\n}\n\nimport('https://unpkg.com/nexskills/nexskills.min.js').then(() => {\n  nexusclient.reflexes().enable_reflex(nexusclient.reflexes().find_by_name(\"trigger\", \"Master Skill Trigger\", false, false, \"eventStream3\"));\n});"
    },
    {
      "type": "alias",
      "name": "",
      "enabled": true,
      "actions": [
        {
          "type": "script",
          "enabled": true,
          "script": "eventStream.purge(\"ALL\");\nnexusclient.reflexes().run_function('onLoad', {}, 'eventStream3');"
        }
      ],
      "text": "es load",
      "matching": "exact",
      "whole_words": true,
      "case_sensitive": true,
      "prefix_suffix": true
    },
    {
      "type": "trigger",
      "name": "Echo Raise Event Trigger",
      "enabled": true,
      "actions": [
        {
          "type": "script",
          "enabled": true,
          "script": "//echo raiseEvent <event id>\neventStream.raiseEvent(args[1]);\nnexusclient.current_line.gag = true;"
        }
      ],
      "text": "^raiseEvent (.+)$",
      "matching": "regexp",
      "whole_words": true,
      "case_sensitive": true
    },
    {
      "type": "group",
      "name": "nexAction3",
      "enabled": true,
      "items": [
        {
          "type": "function",
          "name": "READ ME",
          "enabled": true,
          "code": "/*\nnexAction.triggers.add({\n    regex, \n    action,\n    id = crypto.randomUUID(),\n    tags = [],\n    enabled = true,\n    once = false,\n    duration = false,\n    fg = false,\n    bg = false,\n  })\n\nnexAction.triggers.remove(id)\n\nnexAction.triggers.process(text)\n\nnexAction.triggers.clear()\n\nnexAction.triggers.enable(identifier)\n\nnexAction.triggers.disable(identifier)\n\n*/"
        },
        {
          "type": "trigger",
          "name": "Master Trigger",
          "enabled": true,
          "actions": [
            {
              "type": "script",
              "enabled": true,
              "script": "if (typeof nexAction === \"undefined\" || nexusclient.current_line.is_prompt) { \n  return; \n}\nif (nexusclient.current_line.gag) {\n  //console.log(\"gagged\", JSON.stringify(nexusclient.current_line.parsed_line.text()));\n}\nnexAction.triggers.process(nexusclient.current_line);"
            }
          ],
          "text": "^",
          "matching": "regexp",
          "whole_words": false,
          "case_sensitive": false
        },
        {
          "type": "alias",
          "name": "Master Alias",
          "enabled": false,
          "actions": [
            {
              "type": "script",
              "enabled": true,
              "script": "let res = nexaction.aliases.handler(nexusclient.current_actions.match.text);\nif (!res) {nexusclient.send_commands(nexusclient.current_actions.match.text, true)}"
            }
          ],
          "text": "^.+$",
          "matching": "regexp",
          "whole_words": false,
          "case_sensitive": false,
          "prefix_suffix": true
        }
      ]
    },
    {
      "type": "group",
      "name": "nexSkills3",
      "enabled": true,
      "items": [
        {
          "type": "trigger",
          "name": "Master Skill Trigger",
          "enabled": true,
          "actions": [
            {
              "type": "script",
              "enabled": true,
              "script": "if (\n    typeof nexSkills === \"undefined\" ||\n    nexusclient.current_line.is_prompt ||\n    nexusclient.current_line.gag\n  ) {\n    return;\n  }\nnexSkills.checkSkills(nexusclient.current_line.parsed_line.text());"
            }
          ],
          "text": "^",
          "matching": "regexp",
          "whole_words": false,
          "case_sensitive": false
        }
      ]
    }
  ],
  "description": "Khaseem's eventStream package for Nexus 3.0"
}
