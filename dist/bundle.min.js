(()=>{"use strict";class EventStream extends EventTarget{constructor(){super(),this.stream={},this.gmcpBackLog=[],this.logging=!1}registerEvent(event,callback){let once=arguments.length>2&&void 0!==arguments[2]&&arguments[2],duration=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.stream[event]||(this.stream[event]=[]);const listener={controller:new AbortController,callback,id:crypto.randomUUID()};duration&&(listener.timer=setTimeout((()=>{this.removeListener(event,callback.name)}),duration),listener.controller.signal.onabort=()=>{clearTimeout(listener.timer)});callback.name&&this.removeListener(event,callback.name),this.addEventListener(event,(_ref=>{let{detail}=_ref;try{listener.callback(detail)}catch(error){console.error("Evenstream raiseEvent error:\nevent: %s %o\ncallback %s: %o\ndata: %o\nerror: %o",event,this.stream[event],listener.callback.name,{callback},detail,error)}finally{once&&this.removeListener(event,listener.callback.name)}}),{once,signal:listener.controller.signal}),this.stream[event].push(listener)}raiseEvent(event,data){this.dispatchEvent(new CustomEvent(event,{detail:data})),this.logging&&(console.log("eventStream event: ".concat(event)),console.log("eventStream data: ".concat(JSON.stringify(data))))}removeListener(event,listener){const streamEvent=this.stream[event];if(!streamEvent)return;const clearListener=index=>{streamEvent[index].controller.abort(),streamEvent.splice(index,1)};if("string"==typeof listener){const listenerIndex=streamEvent.findIndex((e=>e.callback.name===listener));if(!(listenerIndex>=0))return!1;clearListener(listenerIndex)}else if(Number.isInteger(listener)&&listener<streamEvent.length)clearListener(listener);else{const index=streamEvent.findIndex((e=>e.callback===listener));index>=0&&clearListener(index)}console.log("eventStream: Removed event ".concat(listener," on event ").concat(event,"."))}getListener(event,id){var _this$stream$event;return null===(_this$stream$event=this.stream[event])||void 0===_this$stream$event?void 0:_this$stream$event.find((e=>e.callback.name===id))}purge(event){if(event)if("ALL"===event){for(const ev in this.stream)this.stream[ev].forEach((cb=>cb.controller.abort()));this.stream={}}else this.stream[event]&&(this.stream[event].forEach((callback=>callback.controller.abort())),this.stream[event]=[]);else console.log("eventStream: attempted to purge invalid event")}gmcpHandler(){for(;this.gmcpBackLog.length>0;){const currentArgs=this.gmcpBackLog.shift();currentArgs.gmcp_method&&(setAtString(globalThis.GMCP,currentArgs.gmcp_method.split("."),currentArgs.gmcp_args),this.raiseEvent(currentArgs.gmcp_method,currentArgs.gmcp_args))}}gmcpHandlerRaw(gmcp){gmcp.gmcp_method&&(setAtString(globalThis.GMCP,gmcp.gmcp_method.split("."),gmcp.gmcp_args),this.raiseEvent(gmcp.gmcp_method,gmcp.gmcp_args))}}const setAtString=(obj,dotarr,val)=>{let current=obj;for(let i=0;i<dotarr.length-1;i++){const key=dotarr[i];current[key]=current[key]||{},current=current[key]}const lastKey=dotarr[dotarr.length-1];"object"!=typeof val||Array.isArray(val)?current[lastKey]=val:current[lastKey]=Object.assign(current[lastKey]||{},val)};class Timer{constructor(id){let length=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this._id=id,this._enabled=!1,this._startTime=0,this._endTime=0,this._timerId=0,this._defaultLength=length,this.setLength(length),this._callbacks=[]}get length(){return this._length}get id(){return this._id}get enabled(){return this._enabled}setLength(length){if(length<0)throw new Error("Timer length cannot be negative");this._length=length}reset(){clearTimeout(this._timerId),this._enabled=!1,this.setLength(this._defaultLength),this._endTime=performance.now()/1e3,eventStream.raiseEvent("timerReset".concat(this._id))}start(){clearTimeout(this._timerId),this._startTimer(),eventStream.raiseEvent("timerStarted".concat(this._id))}_startTimer(){this._timerId=setTimeout(this.stop.bind(this),1e3*this._length),this._enabled=!0,this._startTime=performance.now()/1e3}stop(){this._enabled&&(clearTimeout(this._timerId),this._endTime=performance.now()/1e3,this._enabled=!1,eventStream.raiseEvent("timerStopped".concat(this._id)))}duration(){return this._enabled?this.elapsed():this._endTime-this._startTime}elapsed(){return this._enabled?performance.now()/1e3-this._startTime:0}remaining(){return this._enabled?this._length-this.elapsed():this._length}static createTimer(name){return new Timer(name,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0)}}const base_Timer=Timer.createTimer;var _nexusclient;globalThis.EventStream=EventStream,globalThis.eventStream=new EventStream,globalThis.eventStream.createTimer=base_Timer;"undefined"!=typeof nexusclient&&nexusclient.logged_in&&"khaseem"!==nexusclient.charname&&fetch("https://unpkg.com/nexevent/eventStream3.nxs",{cache:"no-store"}).then((response=>response.json())).then((data=>{nexusclient.packages().get("eventStream3").apply(data,nexusclient.reflexes())})),"undefined"!=typeof nexusclient&&null!==(_nexusclient=nexusclient)&&void 0!==_nexusclient&&_nexusclient.logged_in&&(globalThis.nexusclient.process_lines=function(lines){if(this.gagged)return;if(!lines.length)return;this.current_block=lines;let reflexes=this.reflexes();for(var idx=0;idx<lines.length&&!(idx>=1e3);++idx)this.current_line=lines[idx],this.current_line.index=idx,lines[idx].line&&lines[idx].line.indexOf(String.fromCharCode(7))>=0&&this.platform().beep(),this.fullstop||(lines=reflexes.handle_triggers(lines,idx));reflexes.run_function("onBlock",lines,"ALL"),this.ui().buffer().add_block(lines),this.current_line=void 0,this.current_block=void 0})})();